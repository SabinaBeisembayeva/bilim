docker-compose -f docker-compose-deploy.yml run --rm backend sh -c "python manage.py makemigrations"



$ docker-compose down -v

$ docker-compose -f docker-compose.prod.yml up -d --build
$ docker-compose -f docker-compose.prod.yml exec web python manage.py migrate --noinput
$ docker-compose -f docker-compose.prod.yml exec web python manage.py collectstatic --no-input --clear

$ docker exec -it django_docker_db_1 bash
/# su - postgres
/$ createuser --createdb --password myproject
/$ createdb --username myproject myproject


There's more...

You can destroy Docker containers with the docker-compose down command and rebuild them with your build script:

$ docker-compose down
$ ./build_dev.sh

If something is not working as expected, you can inspect the logs with the docker-compose logs command:

$ docker-compose logs nginx
$ docker-compose logs gunicorn
$ docker-compose logs db

To connect to any of the containers via SSH, you should use one of the following:

$ docker exec -it django_docker_gunicorn_1 bash
$ docker exec -it django_docker_nginx_1 bash
$ docker exec -it django_docker_db_1 bash

You can copy files and directories to and from volumes on Docker containers using the docker cp command:

$ docker cp ~/avatar.png django_docker_gunicorn_1:/home/myproject/media/
$ docker cp django_docker_gunicorn_1:/home/myproject/media ~/Desktop/

If you want to get better a understanding of Docker and Docker Compose, check out the official documentation at https://docs.docker.com/, and specifically https://docs.docker.com/compose/.
